// Mocks generated by Mockito 5.4.6 from annotations
// in flutter_auth_template/test/screens/auth/login_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter_auth_template/data/models/auth_response.dart' as _i3;
import 'package:flutter_auth_template/domain/entities/auth_state.dart' as _i2;
import 'package:flutter_auth_template/providers/auth_provider.dart' as _i4;
import 'package:flutter_riverpod/flutter_riverpod.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:state_notifier/state_notifier.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthState_0 extends _i1.SmartFake implements _i2.AuthState {
  _FakeAuthState_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTwoFactorSetupResponse_1 extends _i1.SmartFake
    implements _i3.TwoFactorSetupResponse {
  _FakeTwoFactorSetupResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthNotifier extends _i1.Mock implements _i4.AuthNotifier {
  MockAuthNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get mounted =>
      (super.noSuchMethod(Invocation.getter(#mounted), returnValue: false)
          as bool);

  @override
  _i5.Stream<_i2.AuthState> get stream =>
      (super.noSuchMethod(
            Invocation.getter(#stream),
            returnValue: _i5.Stream<_i2.AuthState>.empty(),
          )
          as _i5.Stream<_i2.AuthState>);

  @override
  _i2.AuthState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _FakeAuthState_0(this, Invocation.getter(#state)),
          )
          as _i2.AuthState);

  @override
  _i2.AuthState get debugState =>
      (super.noSuchMethod(
            Invocation.getter(#debugState),
            returnValue: _FakeAuthState_0(this, Invocation.getter(#debugState)),
          )
          as _i2.AuthState);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  set onError(_i6.ErrorListener? _onError) => super.noSuchMethod(
    Invocation.setter(#onError, _onError),
    returnValueForMissingStub: null,
  );

  @override
  set state(_i2.AuthState? value) => super.noSuchMethod(
    Invocation.setter(#state, value),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<void> login(String? email, String? password) =>
      (super.noSuchMethod(
            Invocation.method(#login, [email, password]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> register(String? email, String? password, String? name) =>
      (super.noSuchMethod(
            Invocation.method(#register, [email, password, name]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> forgotPassword(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#forgotPassword, [email]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> resetPassword(String? token, String? password) =>
      (super.noSuchMethod(
            Invocation.method(#resetPassword, [token, password]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> changePassword(
    String? currentPassword,
    String? newPassword,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#changePassword, [currentPassword, newPassword]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> verifyEmail(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#verifyEmail, [token]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> resendEmailVerification(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#resendEmailVerification, [email]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i3.TwoFactorSetupResponse> setup2FA() =>
      (super.noSuchMethod(
            Invocation.method(#setup2FA, []),
            returnValue: _i5.Future<_i3.TwoFactorSetupResponse>.value(
              _FakeTwoFactorSetupResponse_1(
                this,
                Invocation.method(#setup2FA, []),
              ),
            ),
          )
          as _i5.Future<_i3.TwoFactorSetupResponse>);

  @override
  _i5.Future<void> enable2FA(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#enable2FA, [code]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> verify2FA(
    String? code, {
    String? token,
    bool? isBackup = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #verify2FA,
              [code],
              {#token: token, #isBackup: isBackup},
            ),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> disable2FA(String? password) =>
      (super.noSuchMethod(
            Invocation.method(#disable2FA, [password]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> oauthLogin(
    String? provider,
    String? code, {
    String? state,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#oauthLogin, [provider, code], {#state: state}),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> requestMagicLink(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#requestMagicLink, [email]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> verifyMagicLink(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#verifyMagicLink, [token]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updateProfile(Map<String, dynamic>? data) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [data]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> refreshUser() =>
      (super.noSuchMethod(
            Invocation.method(#refreshUser, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> signInWithGoogle() =>
      (super.noSuchMethod(
            Invocation.method(#signInWithGoogle, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> signOutFromOAuth() =>
      (super.noSuchMethod(
            Invocation.method(#signOutFromOAuth, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> logout() =>
      (super.noSuchMethod(
            Invocation.method(#logout, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void clearError() => super.noSuchMethod(
    Invocation.method(#clearError, []),
    returnValueForMissingStub: null,
  );

  @override
  bool updateShouldNotify(_i2.AuthState? old, _i2.AuthState? current) =>
      (super.noSuchMethod(
            Invocation.method(#updateShouldNotify, [old, current]),
            returnValue: false,
          )
          as bool);

  @override
  _i6.RemoveListener addListener(
    _i7.Listener<_i2.AuthState>? listener, {
    bool? fireImmediately = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #addListener,
              [listener],
              {#fireImmediately: fireImmediately},
            ),
            returnValue: () {},
          )
          as _i6.RemoveListener);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}
