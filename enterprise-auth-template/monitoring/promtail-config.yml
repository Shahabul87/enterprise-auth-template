server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Docker container logs
  - job_name: containers
    static_configs:
      - targets:
          - localhost
        labels:
          job: containers
          __path__: /var/lib/docker/containers/*/*log
    
    pipeline_stages:
      # Extract container name and image
      - docker: {}
      
      # Parse JSON logs
      - json:
          expressions:
            timestamp: '@timestamp'
            level: level
            message: message
            service: service
            request_id: request_id
            user_id: user_id
            correlation_id: correlation_id
            duration: 'performance.duration'
            status_code: 'extra.status_code'
            method: 'extra.method'
            endpoint: 'extra.endpoint'
            error: 'exception.message'
            traceback: 'exception.traceback'
      
      # Set timestamp
      - timestamp:
          source: timestamp
          format: RFC3339Nano
          fallback_formats:
            - RFC3339
            - UnixMs
      
      # Add labels
      - labels:
          level:
          service:
          request_id:
          user_id:
      
      # Filter and transform
      - match:
          selector: '{level="ERROR"}'
          stages:
            - metrics:
                error_total:
                  type: Counter
                  description: "Total number of errors"
                  source: level
                  config:
                    action: inc
      
      - match:
          selector: '{service="enterprise-auth-backend"}'
          stages:
            - regex:
                expression: 'duration:\s*(?P<duration>[0-9.]+)s'
            - metrics:
                http_request_duration_seconds:
                  type: Histogram
                  description: "HTTP request duration"
                  source: duration
                  config:
                    buckets: [0.005, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 1, 2.5, 5, 10]

  # System logs
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          job: system
          __path__: /var/log/**/*.log
    
    pipeline_stages:
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2}'
      
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}[.]\d+[+-]\d{2}:\d{2})\s+(?P<level>\w+)\s+(?P<message>.*)'
      
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      
      - labels:
          level:
      
      - output:
          source: message

  # Application specific logs
  - job_name: backend
    static_configs:
      - targets:
          - localhost
        labels:
          job: backend
          service: enterprise-auth-backend
          __path__: /var/log/enterprise-auth/backend.log
    
    pipeline_stages:
      - json:
          expressions:
            timestamp: '@timestamp'
            level: level
            logger: logger
            message: message
            request_id: request_id
            user_id: user_id
            method: 'extra.method'
            endpoint: 'extra.endpoint'
            duration: 'extra.duration'
            status_code: 'extra.status_code'
            error: 'exception.message'
      
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      
      - labels:
          level:
          logger:
          method:
          endpoint:
      
      - metrics:
          request_duration_seconds:
            type: Histogram
            description: "Request duration in seconds"
            source: duration
            config:
              buckets: [0.01, 0.05, 0.1, 0.5, 1, 2.5, 5, 10]
          
          requests_total:
            type: Counter
            description: "Total number of requests"
            source: endpoint
            config:
              action: inc
      
      - output:
          source: message

  # Frontend logs (if available)
  - job_name: frontend
    static_configs:
      - targets:
          - localhost
        labels:
          job: frontend
          service: enterprise-auth-frontend
          __path__: /var/log/enterprise-auth/frontend.log
    
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            component: component
            error: error
      
      - timestamp:
          source: timestamp
          format: RFC3339
      
      - labels:
          level:
          component:
      
      - output:
          source: message